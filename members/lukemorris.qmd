---
title: "Luke Morris"
image: images/lukemorris.jpeg
start_year: 2021
published-title: "Lab Member Since:"
date: 8/15/2021
program: CISE
degree: PhD
status: Qualifying
href: |-
    <a href="https://www.cise.ufl.edu/~luke.morris" class="btn btn-secondary">Site</a>
tools:
  - text: Full Bio
    href: members/lukemorris.qmd
about:
    template: solana
    links:
        - text: Website
          href: https://www.cise.ufl.edu/~luke.morris
        - icon: Github
          text: Github
          href: https://github.com/lukem12345
---
is leading development on the CombinatorialSpaces.jl and Decapodes.jl projects.

... for representing multiphysics models and automatically generating simulations from those representations.
--- 

I am interested in problems that applied scientists face when they do any computational work. In particular, I mean the problems of developing models faster, and making the models themselves faster and more accurate. I lead a couple of projects on this front: [Decapodes.jl](https://github.com/AlgebraicJulia/Decapodes.jl) and [CombinatorialSpaces.jl](https://github.com/AlgebraicJulia/CombinatorialSpaces.jl).

We use techniques from Applied Category Theory (ACT) to represent models (as "Decapodes") and how models compose together. These models are systems of partial differential equations (PDEs). ACT - the "science of composition" - lets us analyze scientific models as mathematical objects in their own right. [Catlab.jl](https://algebraicjulia.github.io/Catlab.jl/stable/) - an ACT programming library - enables us to write a library in an ACT-programming style, without sacrificing performance. We use Catlab's implementation of "C-Sets" by specifying a small Decapode "schema", which produces an efficient in-memory database to store a model. Doing algebra on these models then becomes as efficient as performing database operations. It is quite natural to interpret a system of PDEs as a relational database, adopting the point of view that such systems describe how physical quantities relate to one another.

Of course, when we generate simulations from these Decapodes, we need a framework for understanding numerical methods. Otherwise, we only have an encyclopaedia or ontology of physics equations, and nothing to "do" with them. The Discrete Exterior Calculus (DEC) is a good fit here, since it generalizes vector calculus, and differential operators become efficient matrix-vector operations that we can chain together. The DEC works on any type of manifold - a representation of space that makes sense, like a sphere, a plane, or a teapot - and so a Decapode is not necessarily tied to any particular shape or resolution of space. In 1 dimension, your physics make sense on a line or a circle. The CombinatorialSpaces.jl library is where we have implemented a representation of such spaces as "simplicial sets", and definitions of differential operators.

Developing a library for scientific computing is best done by collaborating with the user that you have in mind. So I lead a few collaborations with labs who study space weather. One model simulates electron dissipation - where electrons end up in our atmosphere as they precipitate down from space - and another is a model for galactic cosmic ray (GCR) and solar energetic particle (SEP) transport - how particles coming from other stars or the Sun travel through our solar system. There are applications for the weather on Earth as well, from modeling glacier dynamics to the circulation of matter in our atmosphere.
